<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.auction.mapper.UserOnlineStatusMapper">

    <resultMap id="BaseResultMap" type="com.auction.entity.UserOnlineStatus">
        <id column="id" property="id" jdbcType="BIGINT"/>
        <result column="user_id" property="userId" jdbcType="BIGINT"/>
        <result column="username" property="username" jdbcType="VARCHAR"/>
        <result column="login_time" property="loginTime" jdbcType="TIMESTAMP"/>
        <result column="last_activity" property="lastActivity" jdbcType="TIMESTAMP"/>
        <result column="ip_address" property="ipAddress" jdbcType="VARCHAR"/>
        <result column="user_agent" property="userAgent" jdbcType="VARCHAR"/>
        <result column="session_id" property="sessionId" jdbcType="VARCHAR"/>
        <result column="is_online" property="isOnline" jdbcType="TINYINT"/>
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP"/>
        <result column="update_time" property="updateTime" jdbcType="TIMESTAMP"/>
    </resultMap>

    <sql id="Base_Column_List">
        id, user_id, username, login_time, last_activity, ip_address, user_agent, session_id, is_online, create_time, update_time
    </sql>

    <select id="selectById" parameterType="java.lang.Long" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM user_online_status
        WHERE id = #{id}
    </select>

    <select id="selectByUserId" parameterType="java.lang.Long" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM user_online_status
        WHERE user_id = #{userId}
    </select>

    <select id="selectOnlineUsers" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM user_online_status
        WHERE is_online = 1
        ORDER BY last_activity DESC
    </select>

    <select id="selectAllUsers" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM user_online_status
        ORDER BY is_online DESC, last_activity DESC
    </select>

    <select id="countOnlineUsers" resultType="java.lang.Integer">
        SELECT COUNT(*) FROM user_online_status WHERE is_online = 1
    </select>

    <select id="countAllUsers" resultType="java.lang.Integer">
        SELECT COUNT(*) FROM user_online_status
    </select>

    <insert id="insert" parameterType="com.auction.entity.UserOnlineStatus" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO user_online_status (
            user_id, username, login_time, last_activity, ip_address, user_agent, session_id, is_online, create_time, update_time
        ) VALUES (
            #{userId}, #{username}, #{loginTime}, #{lastActivity}, #{ipAddress}, #{userAgent}, #{sessionId}, #{isOnline}, #{createTime}, #{updateTime}
        )
    </insert>

    <update id="updateById" parameterType="com.auction.entity.UserOnlineStatus">
        UPDATE user_online_status
        <set>
            <if test="username != null">username = #{username},</if>
            <if test="loginTime != null">login_time = #{loginTime},</if>
            <if test="lastActivity != null">last_activity = #{lastActivity},</if>
            <if test="ipAddress != null">ip_address = #{ipAddress},</if>
            <if test="userAgent != null">user_agent = #{userAgent},</if>
            <if test="sessionId != null">session_id = #{sessionId},</if>
            <if test="isOnline != null">is_online = #{isOnline},</if>
            update_time = #{updateTime}
        </set>
        WHERE id = #{id}
    </update>

    <update id="updateLastActivity">
        UPDATE user_online_status
        SET last_activity = #{lastActivity}, update_time = NOW()
        WHERE user_id = #{userId}
    </update>

    <update id="setUserOffline">
        UPDATE user_online_status
        SET is_online = 0, update_time = NOW()
        WHERE user_id = #{userId}
    </update>

    <update id="setAllUsersOffline">
        UPDATE user_online_status
        SET is_online = 0, update_time = NOW()
    </update>

    <delete id="deleteExpiredRecords">
        DELETE FROM user_online_status
        WHERE last_activity &lt; #{expiredTime} AND is_online = 0
    </delete>

</mapper>
